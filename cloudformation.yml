Description: Minecraft cloudformation
# To Do
# Snapshots
# Snapshot lifecycle policy
# CloudWatch ALarm and SNS Topic

Parameters:
    InstanceType:
        Description: Minecraft server instance type
        Type: String
        Default: t2.micro
        AllowedValues:
            - t2.nano
            - t2.micro
            - t2.small
            - t2.medium
            - t2.large
            - t2.xlarge
            - t2.2zlarge
            - m3.medium
            - m3.large
            - m3.xlarge
            - m3.2xlarge
    SshKey:
        Description: The SSH key for administrative access to the EC2 instance.
        Type: String
        Default: mineformationKP
    ExistingDomainName:
        Description: Optional, if you'd like to use Route 53 to regiser a CNAME.
        Type: String
    AMI:
        Description: Should be a unix based AMI. Tested on only the default.
        Type: String
        Default: ami-0b33d91d
    Region:
        Description: Starting to build this out.
        Type: String
        Default: us-east-1
    Bucket:
        Description: Do you have an existing S3 backup?
        Type: String
        AllowedValues:
          - Yes
          - No
    DownloadLink:
        Description: Link to the version of Minecraft Server you want.
        Type: String
        Default: https://s3.amazonaws.com/Minecraft.Download/versions/1.11.2/minecraft_server.1.11.2.jar
Conditions:
    RegisterRoute53:
        !Not [!Equals [!Ref ExistingDomainName, '']]
    Bucket:
        !Equals [!Ref Bucket, 'No']
Resources:
    InstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: All that is necessary for Minecraft and administration
            SecurityGroupIngress:
                -
                    IpProtocol: tcp
                    FromPort: 22
                    ToPort: 22
                    CidrIp: 0.0.0.0/0
                -
                    IpProtocol: tcp
                    FromPort: 25565
                    ToPort: 25565
                    CidrIp: 0.0.0.0/0

    myEIP:
        Type: "AWS::EC2::EIP"
        Properties:
            InstanceId: !Ref myEC2

    myEC2:
        Type: "AWS::EC2::Instance"
        Properties:
            DisableApiTermination: true
            EbsOptimized: false
            ImageId: !Ref AMI
            InstanceInitiatedShutdownBehavior: stop
            InstanceType: !Ref InstanceType
            Ipv6AddressCount: Integer
            Ipv6Addresses:
              - IPv6 Address Type
            KernelId: String
            KeyName: !Ref SshKey
            Monitoring: Boolean
            NetworkInterfaces:
              - EC2 Network Interface"
            PlacementGroupName: String
            PrivateIpAddress: String
            RamdiskId: String
            SecurityGroups: !Ref InstanceSecurityGroup
            Tags:
              - Resource Tag
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    yum update -y
                    mkdir minecraft
                    cd minecraft
                    !Join [ '', ['wget -O minecraft_server.jar',  !Ref 'DownloadLink']]
                    java -jar minecraft_server.jar nogui
                    sed -i -- 's/false/true/g' eula.txt
                    java -jar minecraft_server.jar nogui

    DNSRecord:
        Type: AWS::Route53::RecordSet
        Condition: RegisterRoute53
        Properties:
            HostedZoneName: !Join ['', [!Ref ExistingDomainName, .]]
            Comment: DNS name for MINEformation.
            Name: !Join ['', [!Ref 'AWS::StackName', ., !Ref 'ExistingDomainName']]
            Type: CNAME
            TTL: 300
            ResourceRecords:
                - !GetAtt myELB.DNSName
