Description: Minecraft cloudformation
Parameters:
    InstanceType:
        Description: Minecraft server instance type
        Type: String
        Default: t2.micro
        AllowedValues:
            - t2.micro
            - m1.small
    SshKey:
        Description: The SSH key for administrative access to the EC2 instance.
        Type: String
        Default: mineformationKP
    HostedZoneId: 
        Description: Your HostedZoneID
        Type: String
        Default: Z1ZGYX2ZIYACUH
    Domain:
        Description: Your domain name.
        Type: String
        Default: therealbenforce.com
    AMI:
        Description: Should be a unix based AMI. Tested on only the default.
        Type: String
        Default: ami-0b33d91d
    Region:
        Description: Starting to build this out.
        Type: String
        Default: us-east-1    
    #DownloadLink:
        #Description: Link to the version of Minecraft Server you want.
        #Type: String
        #Default: Not working yet
Resources:
    S3Bucket:
        Type: AWS::S3::Bucket
        Properties: 
            BucketName: !Ref AWS::StackName
            AccessControl: PublicRead
    InstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: All that is necessary for Minecraft and administration
            SecurityGroupIngress:
                - 
                    IpProtocol: tcp
                    FromPort: 22
                    ToPort: 22
                    CidrIp: 0.0.0.0/0
                - 
                    IpProtocol: tcp
                    FromPort: 25565
                    ToPort: 25565
                    CidrIp: 0.0.0.0/0
    MineformationASG:
        Type: "AWS::AutoScaling::AutoScalingGroup"
        Properties:
            AvailabilityZones:
                Fn::GetAZs: 
                    Ref: "AWS::Region"
            Cooldown: 60
            DesiredCapacity: 1
            HealthCheckGracePeriod: 60
            HealthCheckType: EC2
            LaunchConfigurationName: 
                Ref: MineformationLaunchConfig
            LoadBalancerNames: 
                - !Ref myELB
            MaxSize: 1
            MinSize: 1
            Tags:
                - 
                    Key: Name
                    Value: mineformation-ASG
                    PropagateAtLaunch: true
    MineformationLaunchConfig:
        Type: "AWS::AutoScaling::LaunchConfiguration"
        DependsOn: DNSRecord        
        Properties:
            EbsOptimized: false
            ImageId: !Ref AMI
            InstanceMonitoring: false
            InstanceType: 
                Ref: InstanceType
            KeyName:
                Ref: SshKey
            SecurityGroups:
                - Ref: InstanceSecurityGroup
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    yum update -y
                    mkdir minecraft
                    cd minecraft
                    wget -O minecraft_server.jar https://s3.amazonaws.com/Minecraft.Download/versions/1.11.2/minecraft_server.1.11.2.jar
                    java -jar minecraft_server.jar nogui
                    sed -i -- 's/false/true/g' eula.txt
                    java -jar minecraft_server.jar nogui
    DNSRecord:
        Type: AWS::Route53::RecordSet
        Properties:
            HostedZoneId: !Ref HostedZoneId
            Comment: DNS name for MINEformation.
            Name: !Join ['', [!Ref 'AWS::StackName', ., !Ref 'Domain']]
            Type: CNAME
            TTL: 300
            ResourceRecords: 
                - !GetAtt myELB.DNSName
    myELB:
        Type: "AWS::ElasticLoadBalancing::LoadBalancer"
        Properties:
            AvailabilityZones:
                Fn::GetAZs: 
                    Ref: "AWS::Region"
            LoadBalancerName: !Join ['', [!Ref 'AWS::StackName', 'ELB']]
            Listeners:
                - 
                    InstancePort: 25565
                    InstanceProtocol: TCP
                    LoadBalancerPort: 25565
                    Protocol: TCP
            Scheme: internet-facing
            SecurityGroups:
                - !GetAtt InstanceSecurityGroup.GroupId
            Tags:
                -
                    Key: StackName
                    Value: AWS::StackName